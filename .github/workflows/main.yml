# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # setup virtual env and install dependencies
    - name: Setup virtual environment
      run: |
        sudo apt-get install python3-venv
        python3 -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    # Runs mypy
    - name: Run mypy
      run: |
        . venv/bin/activate
        mypy models/

    # Runs pytest on the tests/unit directory
    - name: Run unit tests
      run: |
        . venv/bin/activate
        python -m pytest tests/unit/models/room_test.py

    # setup integration virtual env and install dependencies
    - name: Setup integration test virtual environment
      run: |
        python3 -m venv integration_venv
        . integration_venv/bin/activate
        pip install -r tests/integration/requirements_integration.txt

    # Setup MySQL for integration tests
    - name: Setup MySQL
      run: |
        sudo apt install mysql-server
        # Make sure that NOBODY can access the server without a password
        mysql -e "UPDATE mysql.user SET Password = PASSWORD('root') WHERE User = 'root'"
        # # Kill the anonymous users
        mysql -e "DROP USER ''@'localhost'"
        # # Because our hostname varies we'll use some Bash magic here.
        mysql -e "DROP USER ''@'$(hostname)'"
        # # Kill off the demo database
        mysql -e "DROP DATABASE test"
        # # Make our changes take effect
        mysql -e "FLUSH PRIVILEGES"
        # # Any subsequent tries to run queries this way will get access denied because lack of usr/pwd param

    # Runs pytest on the tests/integration directory
    - name: Run integration tests
      run: |
        . venv/bin/activate
        python -m sunrisa.py &
        echo "Sleeping 5 seconds before starting integration test"
        sleep 5
        . integration_venv/bin/activate
        python tests/integration/sunrisa_integration.py

